// ignore_for_file: non_constant_identifier_names
// ignore_for_file: camel_case_types
// ignore_for_file: prefer_single_quotes

// This file is automatically generated. DO NOT EDIT, all your changes would be lost.
import 'package:flutter_template/entity/banner_entity.dart';
import 'package:flutter_template/generated/json/banner_entity_helper.dart';
import 'package:flutter_template/entity/recommend_entity.dart';
import 'package:flutter_template/generated/json/recommend_entity_helper.dart';

class JsonConvert<T> {
  T fromJson(Map<String, dynamic> json) {
    return _getFromJson<T>(runtimeType, this, json);
  }

  Map<String, dynamic> toJson() {
    return _getToJson<T>(runtimeType, this);
  }

  static _getFromJson<T>(Type type, data, json) {
    switch (type) {
      case BannerEntity:
        return bannerEntityFromJson(data as BannerEntity, json) as T;
      case BannerSong:
        return bannerSongFromJson(data as BannerSong, json) as T;
      case BannerSongAr:
        return bannerSongArFromJson(data as BannerSongAr, json) as T;
      case BannerSongAl:
        return bannerSongAlFromJson(data as BannerSongAl, json) as T;
      case BannerSongH:
        return bannerSongHFromJson(data as BannerSongH, json) as T;
      case BannerSongM:
        return bannerSongMFromJson(data as BannerSongM, json) as T;
      case BannerSongL:
        return bannerSongLFromJson(data as BannerSongL, json) as T;
      case BannerSongPrivilege:
        return bannerSongPrivilegeFromJson(data as BannerSongPrivilege, json)
            as T;
      case RecommendEntity:
        return recommendEntityFromJson(data as RecommendEntity, json) as T;
      case RecommendCreator:
        return recommendCreatorFromJson(data as RecommendCreator, json) as T;
    }
    return data as T;
  }

  static _getToJson<T>(Type type, data) {
    switch (type) {
      case BannerEntity:
        return bannerEntityToJson(data as BannerEntity);
      case BannerSong:
        return bannerSongToJson(data as BannerSong);
      case BannerSongAr:
        return bannerSongArToJson(data as BannerSongAr);
      case BannerSongAl:
        return bannerSongAlToJson(data as BannerSongAl);
      case BannerSongH:
        return bannerSongHToJson(data as BannerSongH);
      case BannerSongM:
        return bannerSongMToJson(data as BannerSongM);
      case BannerSongL:
        return bannerSongLToJson(data as BannerSongL);
      case BannerSongPrivilege:
        return bannerSongPrivilegeToJson(data as BannerSongPrivilege);
      case RecommendEntity:
        return recommendEntityToJson(data as RecommendEntity);
      case RecommendCreator:
        return recommendCreatorToJson(data as RecommendCreator);
    }
    return data as T;
  }

  static T fromJsonAsT<T>(json) {
    switch (T.toString()) {
      case 'BannerEntity':
        return BannerEntity().fromJson(json) as T;
      case 'BannerSong':
        return BannerSong().fromJson(json) as T;
      case 'BannerSongAr':
        return BannerSongAr().fromJson(json) as T;
      case 'BannerSongAl':
        return BannerSongAl().fromJson(json) as T;
      case 'BannerSongH':
        return BannerSongH().fromJson(json) as T;
      case 'BannerSongM':
        return BannerSongM().fromJson(json) as T;
      case 'BannerSongL':
        return BannerSongL().fromJson(json) as T;
      case 'BannerSongPrivilege':
        return BannerSongPrivilege().fromJson(json) as T;
      case 'RecommendEntity':
        return RecommendEntity().fromJson(json) as T;
      case 'RecommendCreator':
        return RecommendCreator().fromJson(json) as T;
    }
    return null;
  }
}
